{
  "active": false,
  "connections": {
    "Messenger": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Call Factory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Factory": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "FILL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FILL": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Respond to Webhook4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook4": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-06-30T05:58:24.462Z",
  "id": "x7mREBQFKFxWociO",
  "isArchived": false,
  "meta": null,
  "name": "booking facebook",
  "nodes": [
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.query['hub.challenge'] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.3,
      "position": [
        -2560,
        -1200
      ],
      "id": "68cb7216-a047-42b4-a7b9-e2c005885a9c",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "multipleMethods": true,
        "path": "a54e8b62-8876-412a-82ae-4c765108c63d",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2780,
        -1100
      ],
      "id": "b2843ea8-b591-4d1b-96a7-8fcc947e3d1d",
      "name": "Messenger",
      "webhookId": "a54e8b62-8876-412a-82ae-4c765108c63d"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://ryanfashion.online/webhook/a54e8b62-8876-412a-82ae-4c765108c63d",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.body.entry[0] }}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2560,
        -1000
      ],
      "id": "ee2eb3cd-3c71-4470-8c7d-3035e1231c1d",
      "name": "Call Factory"
    },
    {
      "parameters": {
        "jsCode": "const body ={\n  \"recipient\":{\n    \"id\":`${$('Edit Fields').first().json['id khách hàng']}`\n  },\n  \"message\":{\n    \"text\":`${$input.first().json.output}`\n  }\n}\nreturn {\n  data: body\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        320,
        -700
      ],
      "id": "d4d91464-ad9d-4284-88f1-2f16b61e4d9a",
      "name": "Code"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v23.0/650808194786249/messages/",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAAaKackdsYsBOZCCZA7Tpm1rleADVm9N2jq2TTvwdpVsW7inSo00nIMqsZBsOhchojj6bhdFkZA2jlTM4kzTwwbQCUyJTmKl3C5NZCVHRvgvhQIAltUiK9YoNeN1qvf94ZAhvgi05xjMl3R5lfnRRLQa9lfoaXswEYeVjzJIAgD1H8unO5XsW3VZCUrPwD8noVjM7vx"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.data }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        520,
        -700
      ],
      "id": "92f9993e-12a0-4bed-8909-a677e79281e9",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0361eddf-7def-4ecb-ab7a-b6016c5086ad",
              "leftValue": "={{ $json.body.entry[0].messaging[0].message.text }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2340,
        -1000
      ],
      "id": "3906d659-1475-4226-af70-981f16c8fe3c",
      "name": "If"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json[\"nội dung tin nhắn\"] }}",
        "messages": {
          "messageValues": [
            {
              "message": "=Hãy phân tích kĩ câu hỏi của khách hàng. \nNẾU KHÁCH HÀNG MUỐN ĐẶT LỊCH HẸN, TRẢ VỀ \"BOOK\"\nNẾU KHÁCH HÀNG MUỐN TRẢ CỨU SẢN PHẨM,TRẢ VỀ \"SEARCH\"\nTẤT CẢ CÁC TRƯỜNG HỢP CÒN LẠI, TRẢ VỀ \"NOTHING\"\n\nKHÔNG GIẢI THÍCH."
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -1880,
        -960
      ],
      "id": "d48c326e-6a63-4d8b-9b3b-32e785c855f4",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-exp",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -1780,
        -720
      ],
      "id": "25aa7e4a-c41e-4104-bdc9-46cff51bc48a",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "rnsTp7QFPOBNsMfi",
          "name": "genmini"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.text }}",
                    "rightValue": "SEARCH",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "40c34ea4-c616-4f8b-8245-e4e1efdb8b21"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "SEARCH"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2b2020ec-09ea-4ef3-bb50-7c951b4b5854",
                    "leftValue": "={{ $json.text }}",
                    "rightValue": "BOOK",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "BOOK"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cf332c3d-314f-402a-8ec4-d19592f90d6b",
                    "leftValue": "={{ $json.text }}",
                    "rightValue": "NOTHING",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "NOTHING"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1500,
        -960
      ],
      "id": "f9414464-f746-4685-9fc1-962204f798a6",
      "name": "Switch"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message }}",
        "options": {
          "systemMessage": "=TODAY IS: {{$now}}\nBạn là trợ lí lễ tân thân thiện, vui vẻ của cửa hàng SPACALLA. \n\nCố gắng trả lời NGẮN GỌN ĐẦY ĐỦ các Ý CHÍNH, luôn luôn có thái độ niềm nở, không làm khách hàng buồn.\nHãy phân tích đó là khách hàng cũ hay mới. \nNẾU ĐÓ LÀ KHÁCH HÀNG MỚI, HÃY HỎI TÊN KHÁCH TRƯỚC. SAU ĐÓ HÃY HỎI KHÁCH LẦN LƯỢT CÁC THÔNG TIN DƯỚI ĐÂY:\n1. VẤN ĐỀ KHÁCH QUAN TÂM VÀ CẦN TƯ VẤN\n2. THỜI GIAN KHÁCH CÓ THỂ ĐẾN CỬA HÀNG\n\n- KHI ĐÃ THU THẬP ĐẦY ĐỦ THÔNG TIN, HÃY TRẢ DỮ LIỆU THEO KIỂU JSON TEMPLATE VÍ DỤ DƯỚI ĐÂY. \n{\n  \"summary\": \"[Tên khách] - [VẤN ĐỀ CẦN TƯ VẤN]\",\n  \"location\": \"FPT University\",\n  \"description\": \"Tư vấn .....\",\n  \"start\": {\n    \"dateTime\": \"2025-06-24T10:00:00+07:00\"\n  },\n  \"end\": {\n    \"dateTime\": [START DATE ADD 2 HRS]\n  }\n}\n\n\nNẾU CHƯA ĐẦY ĐỦ, TIẾP TỤC HỎI."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -1060,
        -800
      ],
      "id": "6fff33da-d4f4-42b2-b447-f15a529a7e79",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "de20caad-716d-407f-b486-5fd7a86347ab",
              "name": "id khách hàng",
              "value": "={{ $json.body.entry[0].messaging[0].sender.id }}",
              "type": "string"
            },
            {
              "id": "00a33d2c-cc57-4811-a381-15307e636e09",
              "name": "id page",
              "value": "={{ $json.body.entry[0].messaging[0].recipient.id }}",
              "type": "string"
            },
            {
              "id": "757ad016-0bb6-45b7-ada2-02897fbf1d9c",
              "name": "nội dung tin nhắn",
              "value": "={{ $json.body.entry[0].messaging[0].message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2120,
        -1020
      ],
      "id": "b88b380e-03a4-4bfd-9075-361d5fcf0c18",
      "name": "FILL"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -980,
        -580
      ],
      "id": "9913e79c-9964-4333-b628-53160c3672fb",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "99e34d87-a4a1-4639-a7f5-90dcf8c42442",
              "name": "sessionId",
              "value": "={{ $('Webhook').item.json.body.entry[0].messaging[0].sender.id }}",
              "type": "string"
            },
            {
              "id": "0cefa2bb-136e-487f-b18a-516052ab9c11",
              "name": "message",
              "value": "={{ $('Webhook').item.json.body.entry[0].messaging[0].message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1280,
        -800
      ],
      "id": "4bab4ae8-67f6-4e9d-8f63-894c2040ccc8",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "55386444-e73f-4aa8-8d3e-004bbfd067fd",
              "leftValue": "={{ $json.data.mes }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -460,
        -800
      ],
      "id": "741c774d-fded-4d60-a44c-e48766243b15",
      "name": "If1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -20,
        -900
      ],
      "id": "a8916609-2a45-435d-843e-9df838ba191e",
      "name": "Respond to Webhook2"
    },
    {
      "parameters": {
        "jsCode": "\nconst input = new Date($input.first().json.start.dateTime);\n\n  const formatted = new Intl.DateTimeFormat('vi-VN', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    hour12: false,\n    timeZone: 'Asia/Ho_Chi_Minh'\n  }).format(input);\nreturn {\n  title: $input.first().json.summary,\n  time: formatted\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -20,
        -700
      ],
      "id": "a767b500-6d5b-402e-956a-89fcb8db4092",
      "name": "Code1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "60976fa2-2e82-4e68-be5f-57b01e4e3f3a",
              "name": "data",
              "value": "={{ $('Webhook').item.json.body.entry[0] }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1280,
        -1100
      ],
      "id": "57d42806-be6b-41b5-a25c-af0fb9f58e68",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://ryanfashion.online/webhook/custom-wp",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\"entry\": [{{ $json.data.toJsonString() }}]}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -980,
        -1100
      ],
      "id": "e172a2cf-5614-4bcb-b1c7-073e3a3d772a",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\"output\": \"{{ $json.output }}\"}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -680,
        -1100
      ],
      "id": "f50a8c32-a616-469f-9728-c878b85dc300",
      "name": "Respond to Webhook3"
    },
    {
      "parameters": {
        "jsCode": "function convertMarkdownToHtml(md) {\n      // Escape HTML\n      md = md.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n\n      // Headers\n      md = md.replace(/^### (.*$)/gim, '<h3>$1</h3>');\n      md = md.replace(/^## (.*$)/gim, '<h2>$1</h2>');\n      md = md.replace(/^# (.*$)/gim, '<h1>$1</h1>');\n\n      // Bold and Italic\n      md = md.replace(/\\*\\*(.*?)\\*\\*/gim, '<strong>$1</strong>');\n      md = md.replace(/_(.*?)_/gim, '<em>$1</em>');\n\n      // Inline code\n      md = md.replace(/`(.*?)`/gim, '<code>$1</code>');\n\n      // Lists\n      md = md.replace(/^\\s*[-*] (.*)$/gim, '<li>$1</li>');\n      md = md.replace(/(<li>.*<\\/li>)/gim, '<ul>$1</ul>'); // Wrap list in <ul>\n\n      // Paragraphs\n      md = md.replace(/\\n{2,}/g, '</p><p>');\n      md = '<p>' + md + '</p>';\n\n      return md.trim();\n    }\nreturn {output: convertMarkdownToHtml($input.first().json.data.mes.output).replaceAll('\\n','<br/>')};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -240,
        -900
      ],
      "id": "365227d8-f636-4930-b05a-9147b0b7ff59",
      "name": "Code2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://ryanfashion.online/webhook/book",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.data[0] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -240,
        -700
      ],
      "id": "9bd1ec5e-d8f1-4e75-806b-ea981f5231fe",
      "name": "HTTP Request2",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"output\": {{$json.html.toJsonString()}}\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        120,
        -700
      ],
      "id": "31a15843-4d35-494c-ac02-8fc5f6cd7d9a",
      "name": "Respond to Webhook4"
    },
    {
      "parameters": {
        "jsCode": "const results = [];\ntry {\n  const md = $input.first().json.output;\n\n  // Extract content between ```json ... ```\n  const match = md.match(/```json\\s*([\\s\\S]*?)\\s*```/i);\n  if (!match) {\n    throw new Error('No JSON block found in markdown');\n  }\n\n  // Parse the extracted JSON\n  let parsed;\n  parsed = JSON.parse(match[1]);\n\n  // Return the parsed JSON as output\n  results.push({\n    json: parsed\n  });\n\nreturn {data: results};\n} catch (error) {\n  return {data: {mes: $input.first().json}}\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -680,
        -800
      ],
      "id": "e2caa976-73c1-4fa1-b46d-eef2fffbdbb6",
      "name": "Code3",
      "retryOnFail": false
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-06-30T07:49:10.525Z",
  "versionId": "1b364ea0-4bf0-47d6-b9f9-474c9a0e8675"
}