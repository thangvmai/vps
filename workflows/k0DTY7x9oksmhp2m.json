{
  "active": false,
  "connections": {
    "Code": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get order": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "G·ª≠i tin",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get order",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-06T08:32:51.712Z",
  "id": "k0DTY7x9oksmhp2m",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "fix 2 - H·ªìng",
  "nodes": [
    {
      "parameters": {
        "jsCode": "const result = {};\n\nfor (const item of items) {\n  const order = item.json;\n\n  // B·ªè qua n·∫øu kh√¥ng c√≥ line_items\n  if (!order.line_items) continue;\n\n  const status = order.status || 'unknown';\n\n  for (const product of order.line_items) {\n    const id = product.product_id;\n    const name = product.name || '';\n    const quantity = product.quantity || 0;\n\n    // D√πng kh√≥a l√† product_id + status ƒë·ªÉ ph√¢n bi·ªát c√πng s·∫£n ph·∫©m nh∆∞ng kh√°c tr·∫°ng th√°i\n    const key = `${id}_${status}`;\n\n    if (!result[key]) {\n      result[key] = {\n        product_id: id,\n        name: name,\n        status: status,\n        quantity: 0\n      };\n    }\n\n    result[key].quantity += quantity;\n  }\n}\n\n// Tr·∫£ v·ªÅ m·∫£ng json\nreturn Object.values(result).map(item => ({ json: item }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        208,
        96
      ],
      "id": "c521dec4-9d63-428c-a231-24f417e2a265",
      "name": "Code"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "428195e4-ec82-49d4-b702-787339701020",
              "leftValue": "={{ $json.quantity }}",
              "rightValue": 20,
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        832,
        80
      ],
      "id": "539f8696-5c43-4724-9f36-b1c24e7a7857",
      "name": "Filter"
    },
    {
      "parameters": {
        "resource": "order",
        "operation": "getAll",
        "returnAll": true,
        "options": {
          "after": "={{ new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString() }}",
          "status": "any"
        }
      },
      "type": "n8n-nodes-base.wooCommerce",
      "typeVersion": 1,
      "position": [
        -32,
        96
      ],
      "id": "150da637-c912-4981-9fb4-b6e23d69a71e",
      "name": "Get order",
      "credentials": {
        "wooCommerceApi": {
          "id": "e577gDNlBychcYZC",
          "name": "WooCommerce account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=üìâ S·∫£n ph·∫©m b√°n ch·∫≠m (trong 30 ng√†y): {{ $json.name }}\nüì¶ ƒê√£ b√°n: {{$json.quantity}} ch·ªâ c·∫ßn ghi s·ªë l∆∞·ª£ng th√¥i.\n- Ph·∫£i c√≥ \"Ch∆∞∆°ng tr√¨nh sale g·ª£i √Ω:\" tr∆∞·ªõc nh·ªØng g·ª£i √Ω.\n- G·ª£i √Ω ch∆∞∆°ng tr√¨nh sale t·ªëi ∆∞u nh·∫•t m·ªôt c√°ch ng·∫Øn g·ªçn cho t·ª´ng d·∫£n ph·∫©m.\n- G·∫°ch ƒë·∫ßu d√≤ng v√† xu·ªëng h√†ng m·ªói g·ª£i √Ω.\n- ƒê·∫ßu ra ph·∫£i r√µ r√†ng v√† d·ªÖ nh√¨n c√πng v·ªõi l√† x√≥a h·∫øt t·∫•t c·∫£ c√°c k√Ω t·ª± markdown.\n- Th√™m c√°c icon cho sinh ƒë·ªông.\n- M·ªü ƒë·∫ßu tin nh·∫Øn ph·∫£i c√≥ d√≤ng \"üìâ S·∫£n ph·∫©m b√°n ch·∫≠m (trong 30 ng√†y): t√™n s·∫£n ph·∫©m\"\n- Ch·ªó s·∫£n ph·∫©m b√°n ch·∫≠m ph·∫£i th√™m icon üìâ\n- Ch·ªó ƒë√£ b√°n ph·∫£i th√™m icon üì¶\n- Current datetime: {{ $now }}\n- Ghi lu√¥n th·ªùi gian th√¥ng b√°o ·ªü cu·ªëi tin cho t√¥i. Ng√†y gi·ªù ghi ti·∫øng vi·ªát. nh∆∞ n√†y \"‚è∞ Th·ªùi gian th√¥ng b√°o: 27 th√°ng 7 nƒÉm 2025, 15:16:22 chi·ªÅu\"",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1264,
        80
      ],
      "id": "f2e0b555-ce8f-4f23-b48e-8d1238427248",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-05-20",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1264,
        352
      ],
      "id": "6ca15279-e96d-4e91-b346-a6227e180c8a",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "YBX5lvVUpd8p1FU8",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    },
    {
      "parameters": {
        "threadId": "7094418190598898540",
        "type": 1,
        "message": "={{ $json.text }}",
        "quote": {},
        "mentions": {}
      },
      "type": "n8n-nodes-zalo-tools.zaloSendMessage",
      "typeVersion": 4,
      "position": [
        1744,
        80
      ],
      "id": "17797d2b-5ca2-4c70-9507-40cadf78cc12",
      "name": "G·ª≠i tin",
      "credentials": {
        "zaloApi": {
          "id": "i07OQeNQ4raMnmsT",
          "name": "Zalo API Credentials"
        }
      }
    },
    {
      "parameters": {
        "content": "## T·ªîNG H·ª¢P\n‚úÖ T·ªïng h·ª£p danh s√°ch s·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c kh√°ch h√†ng ƒë·∫∑t trong th·ªùi gian 30 ng√†y g·∫ßn nh·∫•t",
        "height": 280,
        "width": 430,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -80,
        -32
      ],
      "typeVersion": 1,
      "id": "0786b3ee-5e3f-4a31-89c4-3e1174125d0b",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## L·ªåC\nN·∫øu √≠t h∆°n 20",
        "height": 280,
        "width": 150,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        816,
        -16
      ],
      "typeVersion": 1,
      "id": "1d04b096-df31-439a-b28c-acfb69104883",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## L√äN L·ªäCH\n7:00am m√πng 1 h√†ng th√°ng",
        "height": 280,
        "width": 170,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -288,
        -32
      ],
      "typeVersion": 1,
      "id": "c66d7ff0-1254-42f9-b7f7-fcae824afd95",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "months",
              "triggerAtHour": 7
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -256,
        96
      ],
      "id": "16720e0f-da34-40ca-8734-1dc7e2963ee8",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "743bcb1c-d346-4f4d-b0c2-095dedae5670",
              "leftValue": "={{ $json.status }}",
              "rightValue": "completed",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        528,
        96
      ],
      "id": "3b744067-0127-4c49-b4fa-e80713ee25d7",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1B24vujiYCwEvH75ogxNOHpAiaTuAn9kEo0Mh8jsZOrU",
          "mode": "list",
          "cachedResultName": "SPA Calla",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1B24vujiYCwEvH75ogxNOHpAiaTuAn9kEo0Mh8jsZOrU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1455717724,
          "mode": "list",
          "cachedResultName": "Sheet8",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1B24vujiYCwEvH75ogxNOHpAiaTuAn9kEo0Mh8jsZOrU/edit#gid=1455717724"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $json.product_id }}",
            "t√™n": "={{ $json.name }}",
            "tr·∫°ng th√°i": "={{ $json.status }}",
            "s·ªë l∆∞·ª£ng b√°n": "={{ $json.quantity }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "t√™n",
              "displayName": "t√™n",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "tr·∫°ng th√°i",
              "displayName": "tr·∫°ng th√°i",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "s·ªë l∆∞·ª£ng b√°n",
              "displayName": "s·ªë l∆∞·ª£ng b√°n",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        832,
        368
      ],
      "id": "ef366153-a5eb-44e4-a251-03f4868acdde",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "DkLFOUrd6WdJEXkn",
          "name": "Sora"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-06T09:00:13.487Z",
  "versionId": "c3aab9cc-fadd-49d7-8127-1b2ed1ccba88"
}